WHITESPACE  = _{ " " | "\t" | "\r" | "\n" }

program     = _{ SOI ~ root* ~ EOI }

type_name   =  { "int" | "bool" | "string" }
func_name   = _{ name }
var_name    = _{ name }
name        = @{ (ASCII_ALPHANUMERIC | "_" | "-" | ".")+ }


root                    = _{ func }
  func                  =  { "function" ~ func_name ~ param_list ~ return_type ~ block }
    param_list          =  { "(" ~ (type_decl ~ ("," ~ type_decl)* ~ ","?)? ~ ")" }
    return_type         = _{ ("->" ~ type_name)? }

    type_decl           =  { var_name ~ ":" ~ type_name }

    block               =  { "{" ~ (stmt ~ ";")* ~ "}" }
      stmt              = _{ def_var | assignment | return_stmt | expr }
        def_var         =  { "var" ~ type_decl ~ "=" ~ expr}
        assignment      =  { var_name ~ "=" ~ expr }
        return_stmt     =  { "return" ~ expr }

      expr              = _{ binary_op | term }
        binary_op       =  { term ~ binary_verb ~ term }
          binary_verb   = _{ add | subtract | compare }
            add         =  { "+" }
            subtract    =  { "-" }
            compare     =  { "==" }
        term            = _{ "(" ~ expr ~ ")" | literal | var_name }
          literal       = _{ num | str | bool }
            bool        =  { "true" | "false" }
            num         = _{ int }
            int         = @{ ("+" | "-")? ~ ASCII_DIGIT+ }
            str         = ${ "\"" ~ inner_str ~ "\"" }
              inner_str = @{ char* }
                char    =  {
                    !("\"" | "\\") ~ ANY
                }
